FROM registry.access.redhat.com/rhel7/rhel
# FROM docker.io/thezxm/redhat7

# gcc for cgo
RUN yum -y update && yum -y install \
		gcc \
		gcc-c++ \
		glibc-devel \
		glibc-devel.i686 \
		make \
		openssl \
		tar

ENV GOLANG_VERSION 1.6.2
ENV GOLANG_DOWNLOAD_URL https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz
ENV GOLANG_DOWNLOAD_SHA256 e40c36ae71756198478624ed1bb4ce17597b3c19d243f3f0899bb5740d56212a

RUN curl -fsSL "$GOLANG_DOWNLOAD_URL" -o golang.tar.gz \
	&& echo "$GOLANG_DOWNLOAD_SHA256  golang.tar.gz" | sha256sum -c - \
	&& tar -C /usr/local -xzf golang.tar.gz \
	&& rm golang.tar.gz

ENV GOPATH /go
ENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH

RUN mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
WORKDIR $GOPATH

#the content until here aims to create a rhel image with golang 1.6.2 installed and should be put into a separate Dockerfile.
#the content until here tries to mimic its corresponding ubuntu-specific Dockerfile: https://github.com/docker-library/golang/blob/0ce80411b9f41e9c3a21fc0a1bffba6ae761825a/1.6/Dockerfile

#the content below tries to mimic runc/script/test_Dockerfile.
RUN yum -y update && yum -y install \
	curl \
	gawk \
	git \
	iptables \
	iproute \
	libaio-devel \
	libcap-devel \
	libnl3 \
	libnl3-devel \
	libseccomp \
	libseccomp-devel \
	pkgconfig \
	protobuf-compiler \
	protobuf-c \
	protobuf-c-compiler \
	protobuf-c-devel \
	protobuf-devel \
	protobuf-python \
	python-ipaddr

# install bats
RUN cd /tmp \
	&& git clone https://github.com/sstephenson/bats.git \
	&& cd bats \
	&& git reset --hard 03608115df2071fff4eaaff1605768c275e5f81f \
	&& ./install.sh /usr/local

# install criu
ENV CRIU_VERSION 1.7
RUN mkdir -p /usr/src/criu \
	&& curl -sSL https://github.com/xemul/criu/archive/v${CRIU_VERSION}.tar.gz | tar -v -C /usr/src/criu/ -xz --strip-components=1 \
	&& cd /usr/src/criu \
	&& make install-criu

# setup a playground for us to spawn containers in
ENV ROOTFS /busybox
RUN mkdir -p ${ROOTFS} \
	&& curl -o- -sSL 'https://github.com/jpetazzo/docker-busybox/raw/buildroot-2014.11/rootfs.tar' | tar -C ${ROOTFS} -xf -

COPY script/tmpmount /
WORKDIR /go/src/github.com/opencontainers/runc
ENTRYPOINT ["/tmpmount"]
